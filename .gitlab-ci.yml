# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:
  - build
  - push
  - deploy

variables:
  DOCKER_REGISTRY: harbor.home.aiproject.cn:8443
  IMAGE_NAME: codecrafters/orchard.park.management.api

build-job:
  stage: build
  script:
    - echo "Compiling the code..."
    - docker build -t $DOCKER_REGISTRY/$IMAGE_NAME:${CI_COMMIT_REF_NAME} .
    - echo "Compile complete."

push-job:
  stage: push
  script:
    - echo "Logging in to Docker registry..."
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin https://$DOCKER_REGISTRY
    - echo "Pushing Docker image..."
    - TIMESTAMP=$(date +%Y%m%d%H%M%S)
    - TAG=${CI_COMMIT_REF_NAME}-$TIMESTAMP
    - docker tag $DOCKER_REGISTRY/$IMAGE_NAME:${CI_COMMIT_REF_NAME} $DOCKER_REGISTRY/$IMAGE_NAME:$TAG
    - docker push $DOCKER_REGISTRY/$IMAGE_NAME:$TAG
    - echo "Docker image pushed successfully."

deploy-job:
  stage: deploy
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."

